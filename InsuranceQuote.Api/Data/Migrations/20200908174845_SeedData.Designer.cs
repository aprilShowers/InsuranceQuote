// <auto-generated />
using InsuranceQuote.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InsuranceQuote.Api.Migrations
{
    [DbContext(typeof(InsuranceContext))]
    [Migration("20200908174845_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InsuranceQuote.Api.Data.Entities.InsuranceCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<decimal>("Premium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("InsuranceCustomers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Business = "Plumber",
                            Premium = 0m,
                            Revenue = 8200.00m,
                            State = "FL"
                        },
                        new
                        {
                            Id = 2,
                            Business = "Programmer",
                            Premium = 0m,
                            Revenue = 20000.00m,
                            State = "FL"
                        },
                        new
                        {
                            Id = 3,
                            Business = "Architect",
                            Premium = 0m,
                            Revenue = 45000.00m,
                            State = "OH"
                        },
                        new
                        {
                            Id = 4,
                            Business = "Architect",
                            Premium = 0m,
                            Revenue = 45000.00m,
                            State = "TX"
                        },
                        new
                        {
                            Id = 5,
                            Business = "Programmer",
                            Premium = 0m,
                            Revenue = 1000000.00m,
                            State = "OH"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
